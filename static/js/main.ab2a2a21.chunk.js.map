{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["educationItems","title","description","duration","experienceItems","paperItems","author","venue","date","BioItem","this","props","item","className","React","PureComponent","PaperItem","items","authors","split","map","d","i","key","style","fontWeight","trim","length","App","href","src","alt","Icon","LinkedIn","marginRigth","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ab2a2a21.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport { Icon } from '@material-ui/core';\nimport { LinkedIn } from '@material-ui/icons';\n\nconst educationItems = [\n  {\n    title: \"KAIST (Korea Advanced of Institute and Technology)\",\n    description: \"M.S. in Graduate School of Cultur Technology (Social Computing)\",\n    duration: \"Mar. 2016 - Exp. Feb. 2018\"\n  },\n  {\n    title: \"Ajou University\",\n    description: \"B.S. in Digital Media in College of Information and Technology\",\n    duration: \"Mar. 2010 - Feb. 2016\"\n  },\n  {\n    title: \"University of Nevada, Las Vegas\",\n    description: \"Visiting Scholar in College of Engineering\",\n    duration: \"Jan. 2015 - May. 2015\"\n  },\n];\n\n\nconst experienceItems = [\n  {\n    title: \"Clova AI Research, NAVER\",\n    description: \"Visualization Engineer & Researcher, Front-end web developer\",\n    duration: \"Feb. 2018 - Now\"\n  },\n  {\n    title: \"3Secondz\",\n    description: \"Visualization Engineer, Front-end web developer\",\n    duration: \"May. 2017 - Jan. 2018\"\n  }\n]\n\n\nconst paperItems = [\n  \n  {\n    title: \"VisualHyperTuner: Visual Analytics for User-Driven Hyperparameter Tuning of Deep Neural Networks\",\n    author: \"Heungseok Park, Jinwoong Kim, Minkyu Kim, Ji-hoon Kim, Jaegul Choo, Jung-Woo Ha, and Nako Sung\",\n    venue: \"In Proc. International Conference on Machine Learning and Systems (MLSys)\",\n    date: \"2019\",\n  },\n  {\n    title: \"CHOPT : Automated Hyperparameter Optimization Framework for Cloud-Based Machine Learning Platforms\",\n    author: \"Jinwoong Kim, Minkyu Kim, Heungseok Park, Ernar Kusdavletov, Dongjun Lee, Adrian Kim, Ji-Hoon Kim, Jung-Woo Ha, and Nako Sung\",\n    venue: \"arXiv\",\n    date: \"2018\",\n  },\n  {\n    title: \"NSML: Meet the MLaaS platform with a real-world case study\",\n    author: \"Hanjoo Kim, Minkyu Kim, Dongjoo Seo, Jinwoong Kim, Heungseok Park, Soeun Park, Hyunwoo Jo, KyungHyun Kim, Youngil Yang, Youngkwan Kim, Nako Sung, and Jung-Woo Ha\",\n    venue: \"arXiv\",\n    date: \"2018\",\n  },\n  {\n    title: \"What makes a Successful Course at MOOCs? The Effects of the Structural Positions in Review Networks on the Course's Popularity and Satisfaction\",\n    author: \"Heungseok Park, Wonjae Lee\",\n    venue: \"Master Thesis\",\n    date: \"2018\",\n  },\n  {\n    title: \"NetSet: A Systematic integration of visualization for analyzing set intersections with network\",\n    author: \"Heungseok Park, Hongjun Lim, Wonjae Lee, and Kyungwon Lee\",\n    venue: \"In Proc. IEEE Pacific Visualization Symposium (PacificVis)\",\n    date: \"2017\",\n  },\n  {\n    title: \"Extracting Placeness from Social Media: an Ontology-Based System\",\n    author: \"Jee Jung Choi, Jungmin Kim, Heungseok Park, and Wonjae Lee, \",\n    venue: \"In Proc. IEEE/ACM International Conference on Advances in Social Networks Analysis and Mining (ASONAM)\",\n    date: \"2017\",\n  },\n  {\n    title: \"NetSet: Interactive Visualization for Analyzing Sets in Large Networks\",\n    author: \"Heungseok Park, Hongjun Lim, and Kyungwon Lee\",\n    venue: \"Poster, IEEE VIS Conference, Visualization in Data Science (VDS) Symposium\",\n    date: \"2015\",\n  }\n]\n\n\nclass BioItem extends React.PureComponent {\n\n  render() {\n    const { item: { title, description, duration }} = this.props;\n    return(\n      <div className=\"BioItem\">\n        <div className=\"main\">\n          <div className=\"title\">{title}</div>\n          <div>{description}</div>\n        </div>               \n        <div className=\"sub\">\n          {duration}\n        </div>\n      </div>\n    )\n  }\n}\n\nclass PaperItem extends React.PureComponent {\n\n  render() {\n    const { item: { title, author, venue, date, items }} = this.props;\n    const authors = author.split(',');\n    return(\n      <div className=\"PaperItem\">\n        <div className=\"main\">\n          <div className=\"title\">{title}</div>\n          <div>\n            {\n              authors.map((d, i) =>\n                <span\n                  key={d}\n                  style={{ fontWeight: d.trim() === \"Heungseok Park\" ? 800: \"unset\" }}\n                >\n                  {i === authors.length-1 ? d : `${d}, `}\n                </span>\n              )\n                }\n          </div>\n          <div className=\"venue\">{venue}</div>\n          { items && <div>{items}</div>}\n        </div>               \n        <div className=\"sub\">\n          {date}\n        </div>\n      </div>\n    )\n  }\n}\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"header\">\n          <h1 className=\"title\">\n            <a href=\"https://heungseok.github.io/\">Heungseok Park</a>\n            <div></div>\n          </h1>\n          <div className=\"header-items\">\n            <a href=\"./documents/CV_HeungseokPark.pdf\">CV (PDF)</a>\n          </div>\n          \n        </div>\n        \n\n        <div className=\"contents flex row\">\n          <div className=\"profile\">\n            <div>\n              <img src=\"./images/profile_image.jpeg\" alt=\"failed to load\"/>\n            </div>\n            <div>\n              <Icon>email</Icon><a href=\"mailto:heungseok2@gmail.com\">heungseok2@gmail.com</a>\n            </div>\n            <div>\n              <Icon>school</Icon><a href=\"https://scholar.google.com/citations?user=Shc__D8AAAAJ\">Google Scholar</a>\n            </div>\n            <div>\n              <LinkedIn style={{ marginRigth: '5px'}} /><a href=\"https://www.linkedin.com/in/heungseok2/\"> LinkedIn</a>\n            </div>\n          </div>\n          <div className=\"bio\">\n            <div className=\"intro\">\n              <p>\n                Hi! I'm a data visualization researcher and engineer at the NAVER Corporation. \n                I'm currently designing and developing a Visaul analics system for AutoML on the cloud-based machine learning platform in Clova AI at Naver Corporation.\n                I was interested in data analysis since undergraduate years, specifically in data visualization.\n                I love the quote that “Never trust summary statistics alone, always visualize your data”. \n              </p>\n            </div>\n\n            <div>\n              <h3>Education</h3>\n              {\n                educationItems.map(d => <BioItem key={d.title} item={d} />)\n              }\n            </div>\n\n            <div>\n              <h3>Experience</h3>\n              {\n                experienceItems.map(d => <BioItem key={d.title} item={d} />)\n              }\n            </div>\n\n            <div>\n              <h3>Publications</h3>\n              {\n                paperItems.map(d => <PaperItem key={d.title} item={d} />)\n              }\n            </div>\n            \n          </div>\n\n        </div>\n\n\n\n\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}